
See the NOTICE file for licensing information.

--------------------------------
Building the Apache UIMA C++ SDK
--------------------------------

The library has dependencies on the APR, ICU and Xerces-C++ libraries.
The simplest way to resolve these dependencies is to use the copies
included in the Apache UIMA C++ runtime package.  Install the
appropriate image and set the UIMACPP_HOME environmental parameter to
the location of the runtime.

There is also a dependency on JNI headers from a Java JDK. The build
looks for these headers in the directory specified by JAVA_INCLUDE.

To replace one or more of the dependent libraries with different
versions, download and build the component(s) and specify their use
with the environmental parameters APR_HOME, ICU_HOME, and XERCES_HOME
pointing at the root of each. If APR version 1.x is used on Windows,
an additional parameter must be set: APR_VER=-1


Building, testing and packaging on Linux:
-----------------------------------------
Set up your environment as described above. Assuming you have unpacked
the source into $HOME/uimacpp-2.X.Y-incubating

This step can be skipped if building from a source tarball.
When building from SVN, the GNU automake scripts must first be created.
To create the automake scripts:
  cd $HOME/uimacpp-2.X.Y-incubating/src
  make -f Makefile.prebuild

Build the UIMA shared library and test routines:
  cd $HOME/uimacpp-2.X.Y-incubating/src
  make -f Makefile.unix install

Run the test suite:
  cd $HOME/uimacpp-2.X.Y-incubating/src/test
  ./fvt.sh

Build the documentation:
  cd $HOME/uimacpp-2.X.Y-incubating/docs
  ./builddocs.sh

Build the SDK tree:
  cd $HOME/uimacpp-2.X.Y-incubating
  ./buildsdk.sh target_dir

Package the SDK tarball:
  cd target_dir
  tar czf uimacpp-2.X.Y-incubating-bin.tgz uimacpp


Building, testing and packaging on Windows:
-----------------------------
Set up your environment as described above. Assuming you have unpacked
the source into \uimacpp-2.X.Y-incubating

  cd \uimacpp-2.X.Y-incubating\src
  winmake /build release
  winmake /build debug


Build and run the test suite:
  cd \uimacpp-2.X.Y-incubating\src\test
  devenv test.sln /build release
  fvt

Build the documentation:
  cd \uimacpp-2.X.Y-incubating\docs
  builddocs

Build the SDK tree:
  set MSVCRT_HOME to the directory with the msvc*.dll files required.
  cd \uimacpp-2.X.Y-incubating
  buildsdk target_dir

Package the SDK zipfile by creating a compressed folder of target_dir\uimacpp
into uimacpp-2.X.Y-incubating-bin.zip


Building, testing and packaging on Mac OSX:
-------------------------------------------
Except for one problem with APR, building is the same here as on Linux.
For the Intel-based Mac OSX machines I have tested with, the APR function
to dynamically load shared libraries does not respect DYLD_LIBRARY_PATH.

A fix is to patch dso/unix/dso.c as follows:

26a27,31
>#if defined(DSO_USE_DYLD)
>#define DSO_USE_DLFCN
>#undef DSO_USE_DYLD
>#endif
>


Disclaimer
-----------

Apache UIMA is an effort undergoing incubation at The Apache Software
Foundation (ASF). Incubation is required of all newly accepted projects
until a further review indicates that the infrastructure, communications,
and decision making process have stabilized in a manner consistent with
other successful ASF projects. While incubation status is not necessarily
a reflection of the completeness or stability of the code, it does
indicate that the project has yet to be fully endorsed by the ASF.
